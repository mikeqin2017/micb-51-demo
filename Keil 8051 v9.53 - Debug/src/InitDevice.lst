C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/29/2017 16:10:05 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: c:\SiliconLabs\SimplicityStudio\v4\developer\toolchains\keil_8051\9.53\BIN\C51.exe C:\Users\shuwen.
                    -ou\SimplicityStudio\v4_workspace\MICB-51\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOAT
                    -FUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\shuwen.ou\SimplicityStudio\v4_wo
                    -rkspace\MICB-51\inc;C:\Users\shuwen.ou\SimplicityStudio\v4_workspace\MICB-51\inc\config;C:/SiliconLabs/SimplicityStudio/
                    -v4/developer/sdks/8051/v4.1.1//kits/common/bsp;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.1//kits/EFM8U
                    -B2_SLSTK2001A/config;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.1//Device/EFM8UB2/peripheral_driver/inc
                    -;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.1//Device/shared/si8051base;C:/SiliconLabs/SimplicityStudio
                    -/v4/developer/sdks/8051/v4.1.1//Device/EFM8UB2/inc;C:/SiliconLabs/SimplicityStudio/v4/developer/sdks/8051/v4.1.1//kits/c
                    -ommon/drivers/efm8_retargetserial) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\InitDevic
                    -e.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8UB2_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void enter_DefaultMode_from_RESET(void) {
  23   1              // $[Config Calls]
  24   1              // Save the SFRPAGE
  25   1              uint8_t SFRPAGE_save = SFRPAGE;
  26   1              PCA_0_enter_DefaultMode_from_RESET();
  27   1              PCACH_0_enter_DefaultMode_from_RESET();
  28   1              PORTS_0_enter_DefaultMode_from_RESET();
  29   1              PORTS_1_enter_DefaultMode_from_RESET();
  30   1              PORTS_2_enter_DefaultMode_from_RESET();
  31   1              PORTS_3_enter_DefaultMode_from_RESET();
  32   1              PBCFG_0_enter_DefaultMode_from_RESET();
  33   1              HFOSC_0_enter_DefaultMode_from_RESET();
  34   1              CLOCK_0_enter_DefaultMode_from_RESET();
  35   1              CIP51_0_enter_DefaultMode_from_RESET();
  36   1              TIMER01_0_enter_DefaultMode_from_RESET();
  37   1              TIMER16_3_enter_DefaultMode_from_RESET();
  38   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
  39   1              SMBUS_0_enter_DefaultMode_from_RESET();
  40   1              SPI_0_enter_DefaultMode_from_RESET();
  41   1              UART_0_enter_DefaultMode_from_RESET();
  42   1              UARTE_1_enter_DefaultMode_from_RESET();
  43   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  44   1              // Restore the SFRPAGE
  45   1              SFRPAGE = SFRPAGE_save;
  46   1              // [Config Calls]$
  47   1      
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/29/2017 16:10:05 PAGE 2   

  48   1      }
  49          
  50          //================================================================================
  51          // PCA_0_enter_DefaultMode_from_RESET
  52          //================================================================================
  53          extern void PCA_0_enter_DefaultMode_from_RESET(void) {
  54   1              // $[PCA0MD - PCA Mode]
  55   1              /***********************************************************************
  56   1               - Disable Watchdog Timer
  57   1               - System clock divided by 12
  58   1               - PCA continues to function normally while the system controller is in
  59   1               Idle Mode
  60   1               - Disable the CF interrupt
  61   1               - Disable Watchdog Timer
  62   1               - Watchdog Timer Enable unlocked
  63   1               ***********************************************************************/
  64   1              SFRPAGE = 0x00;
  65   1              PCA0MD &= ~PCA0MD_WDTE__BMASK;
  66   1              PCA0MD = PCA0MD_CPS__SYSCLK_DIV_12 | PCA0MD_CIDL__NORMAL
  67   1                              | PCA0MD_ECF__OVF_INT_DISABLED | PCA0MD_WDTE__DISABLED
  68   1                              | PCA0MD_WDLCK__UNLOCKED;
  69   1              // [PCA0MD - PCA Mode]$
  70   1      
  71   1              // $[PCA0H - PCA Counter/Timer High Byte]
  72   1              // [PCA0H - PCA Counter/Timer High Byte]$
  73   1      
  74   1              // $[PCA0L - PCA Counter/Timer Low Byte]
  75   1              // [PCA0L - PCA Counter/Timer Low Byte]$
  76   1      
  77   1              // $[PCA0CN0 - PCA Control 0]
  78   1              // [PCA0CN0 - PCA Control 0]$
  79   1      
  80   1      }
  81          
  82          //================================================================================
  83          // PCACH_0_enter_DefaultMode_from_RESET
  84          //================================================================================
  85          extern void PCACH_0_enter_DefaultMode_from_RESET(void) {
  86   1              uint8_t PCA0CN0_CR_save = PCA0CN0 & PCA0CN0_CR__BMASK;
  87   1              PCA0CN0 |= PCA0CN0_CR_save;
  88   1      
  89   1              // $[PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]
  90   1              /***********************************************************************
  91   1               - Disable negative edge capture
  92   1               - Disable CCF0 interrupts
  93   1               - Enable match function
  94   1               - 8-bit PWM selected
  95   1               - Disable positive edge capture
  96   1               - Disable comparator function
  97   1               - Disable PWM function
  98   1               - Disable toggle function
  99   1               ***********************************************************************/
 100   1              PCA0CPM0 = PCA0CPM0_CAPN__DISABLED | PCA0CPM0_ECCF__DISABLED
 101   1                              | PCA0CPM0_MAT__ENABLED | PCA0CPM0_PWM16__8_BIT
 102   1                              | PCA0CPM0_CAPP__DISABLED | PCA0CPM0_ECOM__DISABLED
 103   1                              | PCA0CPM0_PWM__DISABLED | PCA0CPM0_TOG__DISABLED;
 104   1              // [PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]$
 105   1      
 106   1              // $[PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]
 107   1              // [PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]$
 108   1      
 109   1              // $[PCA0CPH0 - PCA Channel 0 Capture Module High Byte]
 110   1              // [PCA0CPH0 - PCA Channel 0 Capture Module High Byte]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/29/2017 16:10:05 PAGE 3   

 111   1      
 112   1              // $[PCA0 Start/Run restore]
 113   1              // [PCA0 Start/Run restore]$
 114   1      
 115   1      }
 116          
 117          //================================================================================
 118          // PORTS_0_enter_DefaultMode_from_RESET
 119          //================================================================================
 120          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
 121   1              // $[P0 - Port 0 Pin Latch]
 122   1              // [P0 - Port 0 Pin Latch]$
 123   1      
 124   1              // $[P0MDOUT - Port 0 Output Mode]
 125   1              /***********************************************************************
 126   1               - P0.0 output is open-drain
 127   1               - P0.1 output is open-drain
 128   1               - P0.2 output is open-drain
 129   1               - P0.3 output is open-drain
 130   1               - P0.4 output is push-pull
 131   1               - P0.5 output is open-drain
 132   1               - P0.6 output is push-pull
 133   1               - P0.7 output is open-drain
 134   1               ***********************************************************************/
 135   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 136   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 137   1                              | P0MDOUT_B4__PUSH_PULL | P0MDOUT_B5__OPEN_DRAIN
 138   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__OPEN_DRAIN;
 139   1              // [P0MDOUT - Port 0 Output Mode]$
 140   1      
 141   1              // $[P0MDIN - Port 0 Input Mode]
 142   1              // [P0MDIN - Port 0 Input Mode]$
 143   1      
 144   1              // $[P0SKIP - Port 0 Skip]
 145   1              /***********************************************************************
 146   1               - P0.0 pin is skipped by the crossbar
 147   1               - P0.1 pin is skipped by the crossbar
 148   1               - P0.2 pin is skipped by the crossbar
 149   1               - P0.3 pin is skipped by the crossbar
 150   1               - P0.4 pin is not skipped by the crossbar
 151   1               - P0.5 pin is not skipped by the crossbar
 152   1               - P0.6 pin is not skipped by the crossbar
 153   1               - P0.7 pin is not skipped by the crossbar
 154   1               ***********************************************************************/
 155   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 156   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__NOT_SKIPPED
 157   1                              | P0SKIP_B5__NOT_SKIPPED | P0SKIP_B6__NOT_SKIPPED
 158   1                              | P0SKIP_B7__NOT_SKIPPED;
 159   1              // [P0SKIP - Port 0 Skip]$
 160   1      
 161   1      }
 162          
 163          //================================================================================
 164          // PORTS_1_enter_DefaultMode_from_RESET
 165          //================================================================================
 166          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 167   1              // $[P1 - Port 1 Pin Latch]
 168   1              // [P1 - Port 1 Pin Latch]$
 169   1      
 170   1              // $[P1MDOUT - Port 1 Output Mode]
 171   1              /***********************************************************************
 172   1               - P1.0 output is push-pull
 173   1               - P1.1 output is push-pull
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/29/2017 16:10:05 PAGE 4   

 174   1               - P1.2 output is push-pull
 175   1               - P1.3 output is open-drain
 176   1               - P1.4 output is open-drain
 177   1               - P1.5 output is open-drain
 178   1               - P1.6 output is push-pull
 179   1               - P1.7 output is push-pull
 180   1               ***********************************************************************/
 181   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__PUSH_PULL
 182   1                              | P1MDOUT_B2__PUSH_PULL | P1MDOUT_B3__OPEN_DRAIN
 183   1                              | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__OPEN_DRAIN
 184   1                              | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__PUSH_PULL;
 185   1              // [P1MDOUT - Port 1 Output Mode]$
 186   1      
 187   1              // $[P1MDIN - Port 1 Input Mode]
 188   1              /***********************************************************************
 189   1               - P1.0 pin is configured for digital mode
 190   1               - P1.1 pin is configured for digital mode
 191   1               - P1.2 pin is configured for digital mode
 192   1               - P1.3 pin is configured for digital mode
 193   1               - P1.4 pin is configured for digital mode
 194   1               - P1.5 pin is configured for analog mode
 195   1               - P1.6 pin is configured for digital mode
 196   1               - P1.7 pin is configured for digital mode
 197   1               ***********************************************************************/
 198   1              P1MDIN = P1MDIN_B0__DIGITAL | P1MDIN_B1__DIGITAL | P1MDIN_B2__DIGITAL
 199   1                              | P1MDIN_B3__DIGITAL | P1MDIN_B4__DIGITAL | P1MDIN_B5__ANALOG
 200   1                              | P1MDIN_B6__DIGITAL | P1MDIN_B7__DIGITAL;
 201   1              // [P1MDIN - Port 1 Input Mode]$
 202   1      
 203   1              // $[P1SKIP - Port 1 Skip]
 204   1              /***********************************************************************
 205   1               - P1.0 pin is not skipped by the crossbar
 206   1               - P1.1 pin is skipped by the crossbar
 207   1               - P1.2 pin is skipped by the crossbar
 208   1               - P1.3 pin is skipped by the crossbar
 209   1               - P1.4 pin is skipped by the crossbar
 210   1               - P1.5 pin is skipped by the crossbar
 211   1               - P1.6 pin is skipped by the crossbar
 212   1               - P1.7 pin is skipped by the crossbar
 213   1               ***********************************************************************/
 214   1              P1SKIP = P1SKIP_B0__NOT_SKIPPED | P1SKIP_B1__SKIPPED | P1SKIP_B2__SKIPPED
 215   1                              | P1SKIP_B3__SKIPPED | P1SKIP_B4__SKIPPED | P1SKIP_B5__SKIPPED
 216   1                              | P1SKIP_B6__SKIPPED | P1SKIP_B7__SKIPPED;
 217   1              // [P1SKIP - Port 1 Skip]$
 218   1      
 219   1      }
 220          
 221          //================================================================================
 222          // PBCFG_0_enter_DefaultMode_from_RESET
 223          //================================================================================
 224          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 225   1              // $[XBR1 - Port I/O Crossbar 1]
 226   1              /***********************************************************************
 227   1               - Weak Pullups enabled 
 228   1               - Crossbar enabled
 229   1               - All PCA I/O unavailable at Port pins
 230   1               - ECI unavailable at Port pin
 231   1               - T0 unavailable at Port pin
 232   1               - T1 unavailable at Port pin
 233   1               ***********************************************************************/
 234   1              XBR1 = XBR1_WEAKPUD__PULL_UPS_ENABLED | XBR1_XBARE__ENABLED
 235   1                              | XBR1_PCA0ME__DISABLED | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
 236   1                              | XBR1_T1E__DISABLED;
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/29/2017 16:10:05 PAGE 5   

 237   1              // [XBR1 - Port I/O Crossbar 1]$
 238   1      
 239   1              // $[XBR0 - Port I/O Crossbar 0]
 240   1              /***********************************************************************
 241   1               - UART0 TX, RX routed to Port pins P0.4 and P0.5
 242   1               - SPI I/O routed to Port pins
 243   1               - SMBus 0 I/O routed to Port pins
 244   1               - CP0 unavailable at Port pin
 245   1               - Asynchronous CP0 unavailable at Port pin
 246   1               - CP1 unavailable at Port pin
 247   1               - Asynchronous CP1 unavailable at Port pin
 248   1               - SYSCLK unavailable at Port pin
 249   1               ***********************************************************************/
 250   1              XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__ENABLED | XBR0_SMB0E__ENABLED
 251   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 252   1                              | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 253   1              // [XBR0 - Port I/O Crossbar 0]$
 254   1      
 255   1              // $[XBR2 - Port I/O Crossbar 2]
 256   1              /***********************************************************************
 257   1               - UART1 TX, RX routed to Port pins
 258   1               - SMBus1 I/O unavailable at Port pins
 259   1               ***********************************************************************/
 260   1              XBR2 = XBR2_URT1E__ENABLED | XBR2_SMB1E__DISABLED;
 261   1              // [XBR2 - Port I/O Crossbar 2]$
 262   1      
 263   1      }
 264          
 265          //================================================================================
 266          // RSTSRC_0_enter_DefaultMode_from_RESET
 267          //================================================================================
 268          extern void RSTSRC_0_enter_DefaultMode_from_RESET(void) {
 269   1              // $[RSTSRC - Reset Source]
 270   1              /***********************************************************************
 271   1               - A power-on or supply monitor reset occurred
 272   1               - A missing clock detector reset occurred
 273   1               - A Comparator 0 reset did not occur
 274   1               - A USB0 reset did not occur
 275   1               ***********************************************************************/
 276   1              RSTSRC = RSTSRC_PORSF__SET | RSTSRC_MCDRSF__SET | RSTSRC_C0RSEF__NOT_SET
 277   1                              | RSTSRC_USBRSF__NOT_SET;
 278   1              // [RSTSRC - Reset Source]$
 279   1      
 280   1      }
 281          
 282          //================================================================================
 283          // HFOSC_0_enter_DefaultMode_from_RESET
 284          //================================================================================
 285          extern void HFOSC_0_enter_DefaultMode_from_RESET(void) {
 286   1              // $[HFO0CN - High Frequency Oscillator Control]
 287   1              /***********************************************************************
 288   1               - SYSCLK can be derived from Internal H-F Oscillator divided by 1 
 289   1               ***********************************************************************/
 290   1              HFO0CN |= HFO0CN_IFCN__SYSCLK_DIV_1;
 291   1              // [HFO0CN - High Frequency Oscillator Control]$
 292   1      
 293   1      }
 294          
 295          //================================================================================
 296          // CLOCK_0_enter_DefaultMode_from_RESET
 297          //================================================================================
 298          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 299   1              // $[CLKSEL - Clock Select]
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/29/2017 16:10:05 PAGE 6   

 300   1              // [CLKSEL - Clock Select]$
 301   1      
 302   1      }
 303          
 304          //================================================================================
 305          // TIMER01_0_enter_DefaultMode_from_RESET
 306          //================================================================================
 307          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 308   1              // $[Timer Initialization]
 309   1              //Save Timer Configuration
 310   1              uint8_t TCON_save;
 311   1              TCON_save = TCON;
 312   1              //Stop Timers
 313   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 314   1      
 315   1              // [Timer Initialization]$
 316   1      
 317   1              // $[TH0 - Timer 0 High Byte]
 318   1              // [TH0 - Timer 0 High Byte]$
 319   1      
 320   1              // $[TL0 - Timer 0 Low Byte]
 321   1              // [TL0 - Timer 0 Low Byte]$
 322   1      
 323   1              // $[TH1 - Timer 1 High Byte]
 324   1              /***********************************************************************
 325   1               - Timer 1 High Byte = 0xCC
 326   1               ***********************************************************************/
 327   1              TH1 = (0xCC << TH1_TH1__SHIFT);
 328   1              // [TH1 - Timer 1 High Byte]$
 329   1      
 330   1              // $[TL1 - Timer 1 Low Byte]
 331   1              // [TL1 - Timer 1 Low Byte]$
 332   1      
 333   1              // $[Timer Restoration]
 334   1              //Restore Timer Configuration
 335   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 336   1      
 337   1              // [Timer Restoration]$
 338   1      
 339   1      }
 340          
 341          //================================================================================
 342          // TIMER_SETUP_0_enter_DefaultMode_from_RESET
 343          //================================================================================
 344          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 345   1              // $[CKCON0 - Clock Control 0]
 346   1              /***********************************************************************
 347   1               - System clock divided by 12
 348   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 349   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 350   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 351   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 352   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 353   1               - Timer 1 uses the system clock
 354   1               ***********************************************************************/
 355   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__PRESCALE
 356   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 357   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 358   1                              | CKCON0_T1M__SYSCLK;
 359   1              // [CKCON0 - Clock Control 0]$
 360   1      
 361   1              // $[CKCON1 - Clock Control 1]
 362   1              // [CKCON1 - Clock Control 1]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/29/2017 16:10:05 PAGE 7   

 363   1      
 364   1              // $[TMOD - Timer 0/1 Mode]
 365   1              /***********************************************************************
 366   1               - Mode 0, 13-bit Counter/Timer
 367   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 368   1               - Timer Mode
 369   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 370   1               - Timer Mode
 371   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 372   1               ***********************************************************************/
 373   1              TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 374   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 375   1              // [TMOD - Timer 0/1 Mode]$
 376   1      
 377   1              // $[TCON - Timer 0/1 Control]
 378   1              /***********************************************************************
 379   1               - Start Timer 1 running
 380   1               ***********************************************************************/
 381   1              TCON |= TCON_TR1__RUN;
 382   1              // [TCON - Timer 0/1 Control]$
 383   1      
 384   1      }
 385          
 386          //================================================================================
 387          // UART_0_enter_DefaultMode_from_RESET
 388          //================================================================================
 389          extern void UART_0_enter_DefaultMode_from_RESET(void) {
 390   1              // $[SCON0 - UART0 Serial Port Control]
 391   1              /***********************************************************************
 392   1               - UART0 reception enabled
 393   1               ***********************************************************************/
 394   1              SCON0 |= SCON0_REN__RECEIVE_ENABLED;
 395   1              // [SCON0 - UART0 Serial Port Control]$
 396   1      
 397   1      }
 398          
 399          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 400   1              // $[EIE1 - Extended Interrupt Enable 1]
 401   1              /***********************************************************************
 402   1               - Disable ADC0 Conversion Complete interrupt
 403   1               - Disable ADC0 Window Comparison interrupt
 404   1               - Disable CP0 interrupts
 405   1               - Disable CP1 interrupts
 406   1               - Disable all PCA0 interrupts
 407   1               - Enable interrupt requests generated by SMB0
 408   1               - Disable Timer 3 interrupts
 409   1               - Disable all USB0 interrupts
 410   1               ***********************************************************************/
 411   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 412   1                              | EIE1_ECP1__DISABLED | EIE1_EPCA0__DISABLED | EIE1_ESMB0__ENABLED
 413   1                              | EIE1_ET3__DISABLED | EIE1_EUSB0__DISABLED;
 414   1              // [EIE1 - Extended Interrupt Enable 1]$
 415   1      
 416   1              // $[EIP1 - Extended Interrupt Priority 1]
 417   1              // [EIP1 - Extended Interrupt Priority 1]$
 418   1      
 419   1              // $[IE - Interrupt Enable]
 420   1              /***********************************************************************
 421   1               - Enable each interrupt according to its individual mask setting
 422   1               - Disable external interrupt 0
 423   1               - Disable external interrupt 1
 424   1               - Enable interrupt requests generated by SPI0
 425   1               - Disable all Timer 0 interrupt
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/29/2017 16:10:05 PAGE 8   

 426   1               - Disable all Timer 1 interrupt
 427   1               - Disable Timer 2 interrupt
 428   1               - Enable UART0 interrupt
 429   1               ***********************************************************************/
 430   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 431   1                              | IE_ESPI0__ENABLED | IE_ET0__DISABLED | IE_ET1__DISABLED
 432   1                              | IE_ET2__DISABLED | IE_ES0__ENABLED;
 433   1              // [IE - Interrupt Enable]$
 434   1      
 435   1              // $[IP - Interrupt Priority]
 436   1              // [IP - Interrupt Priority]$
 437   1      
 438   1              // $[EIE2 - Extended Interrupt Enable 2]
 439   1              /***********************************************************************
 440   1               - Disable all SMB1 interrupts
 441   1               - Disable Timer 4interrupts
 442   1               - Disable Timer 5 interrupts
 443   1               - Enable UART1 interrupt
 444   1               - Disable all VBUS interrupts
 445   1               ***********************************************************************/
 446   1              EIE2 = EIE2_ESMB1__DISABLED | EIE2_ET4__DISABLED | EIE2_ET5__DISABLED
 447   1                              | EIE2_ES1__ENABLED | EIE2_EVBUS__DISABLED;
 448   1              // [EIE2 - Extended Interrupt Enable 2]$
 449   1      
 450   1              // $[EIP2 - Extended Interrupt Priority 2]
 451   1              // [EIP2 - Extended Interrupt Priority 2]$
 452   1      
 453   1      }
 454          
 455          extern void CIP51_0_enter_DefaultMode_from_RESET(void) {
 456   1              // $[PFE0CN - Prefetch Engine Control]
 457   1              /***********************************************************************
 458   1               - Each byte of a firmware flash write is written individually
 459   1               - Disable the prefetch engine 
 460   1               ***********************************************************************/
 461   1              PFE0CN = PFE0CN_FLBWE__BLOCK_WRITE_DISABLED | PFE0CN_PFEN__DISABLED;
 462   1              // [PFE0CN - Prefetch Engine Control]$
 463   1      
 464   1      }
 465          
 466          extern void UARTE_1_enter_DefaultMode_from_RESET(void) {
 467   1              // $[SBCON1 - UART1 Baud Rate Generator Control]
 468   1              /***********************************************************************
 469   1               - Enable the baud rate generator
 470   1               - Prescaler = 12
 471   1               ***********************************************************************/
 472   1              SBCON1 = SBCON1_BREN__ENABLED | SBCON1_BPS__DIV_BY_12;
 473   1              // [SBCON1 - UART1 Baud Rate Generator Control]$
 474   1      
 475   1              // $[SMOD1 - UART1 Mode]
 476   1              // [SMOD1 - UART1 Mode]$
 477   1      
 478   1              // $[SBRLH1 - UART1 Baud Rate Generator High Byte]
 479   1              /***********************************************************************
 480   1               - UART1 Baud Rate Reload High = 0xFF
 481   1               ***********************************************************************/
 482   1              SBRLH1 = (0xFF << SBRLH1_BRH__SHIFT);
 483   1              // [SBRLH1 - UART1 Baud Rate Generator High Byte]$
 484   1      
 485   1              // $[SBRLL1 - UART1 Baud Rate Generator Low Byte]
 486   1              /***********************************************************************
 487   1               - UART1 Baud Rate Reload Low = 0xCC
 488   1               ***********************************************************************/
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/29/2017 16:10:05 PAGE 9   

 489   1              SBRLL1 = (0xCC << SBRLL1_BRL__SHIFT);
 490   1              // [SBRLL1 - UART1 Baud Rate Generator Low Byte]$
 491   1      
 492   1              // $[SCON1 - UART1 Serial Port Control]
 493   1              /***********************************************************************
 494   1               - UART1 reception enabled
 495   1               ***********************************************************************/
 496   1              SCON1 |= SCON1_REN__RECEIVE_ENABLED;
 497   1              // [SCON1 - UART1 Serial Port Control]$
 498   1      
 499   1      }
 500          
 501          extern void PORTS_2_enter_DefaultMode_from_RESET(void) {
 502   1              // $[P2 - Port 2 Pin Latch]
 503   1              // [P2 - Port 2 Pin Latch]$
 504   1      
 505   1              // $[P2MDOUT - Port 2 Output Mode]
 506   1              // [P2MDOUT - Port 2 Output Mode]$
 507   1      
 508   1              // $[P2MDIN - Port 2 Input Mode]
 509   1              // [P2MDIN - Port 2 Input Mode]$
 510   1      
 511   1              // $[P2SKIP - Port 2 Skip]
 512   1              /***********************************************************************
 513   1               - P2.0 pin is skipped by the crossbar
 514   1               - P2.1 pin is skipped by the crossbar
 515   1               - P2.2 pin is skipped by the crossbar
 516   1               - P2.3 pin is not skipped by the crossbar
 517   1               - P2.4 pin is not skipped by the crossbar
 518   1               - P2.5 pin is skipped by the crossbar
 519   1               - P2.6 pin is skipped by the crossbar
 520   1               - P2.7 pin is skipped by the crossbar
 521   1               ***********************************************************************/
 522   1              P2SKIP = P2SKIP_B0__SKIPPED | P2SKIP_B1__SKIPPED | P2SKIP_B2__SKIPPED
 523   1                              | P2SKIP_B3__NOT_SKIPPED | P2SKIP_B4__NOT_SKIPPED
 524   1                              | P2SKIP_B5__SKIPPED | P2SKIP_B6__SKIPPED | P2SKIP_B7__SKIPPED;
 525   1              // [P2SKIP - Port 2 Skip]$
 526   1      
 527   1      }
 528          
 529          extern void PORTS_3_enter_DefaultMode_from_RESET(void) {
 530   1              // $[P3 - Port 3 Pin Latch]
 531   1              // [P3 - Port 3 Pin Latch]$
 532   1      
 533   1              // $[P3MDOUT - Port 3 Output Mode]
 534   1              /***********************************************************************
 535   1               - P3.0 output is open-drain
 536   1               - P3.1 output is open-drain
 537   1               - P3.2 output is open-drain
 538   1               - P3.3 output is open-drain
 539   1               - P3.4 output is open-drain
 540   1               - P3.5 output is open-drain
 541   1               - P3.6 output is push-pull
 542   1               - P3.7 output is open-drain
 543   1               ***********************************************************************/
 544   1              P3MDOUT = P3MDOUT_B0__OPEN_DRAIN | P3MDOUT_B1__OPEN_DRAIN
 545   1                              | P3MDOUT_B2__OPEN_DRAIN | P3MDOUT_B3__OPEN_DRAIN
 546   1                              | P3MDOUT_B4__OPEN_DRAIN | P3MDOUT_B5__OPEN_DRAIN
 547   1                              | P3MDOUT_B6__PUSH_PULL | P3MDOUT_B7__OPEN_DRAIN;
 548   1              // [P3MDOUT - Port 3 Output Mode]$
 549   1      
 550   1              // $[P3MDIN - Port 3 Input Mode]
 551   1              // [P3MDIN - Port 3 Input Mode]$
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/29/2017 16:10:05 PAGE 10  

 552   1      
 553   1              // $[P3SKIP - Port 3 Skip]
 554   1              /***********************************************************************
 555   1               - P3.0 pin is skipped by the crossbar
 556   1               - P3.1 pin is skipped by the crossbar
 557   1               - P3.2 pin is skipped by the crossbar
 558   1               - P3.3 pin is skipped by the crossbar
 559   1               - P3.4 pin is skipped by the crossbar
 560   1               - P3.5 pin is skipped by the crossbar
 561   1               - P3.6 pin is not skipped by the crossbar
 562   1               - P3.7 pin is not skipped by the crossbar
 563   1               ***********************************************************************/
 564   1              P3SKIP = P3SKIP_B0__SKIPPED | P3SKIP_B1__SKIPPED | P3SKIP_B2__SKIPPED
 565   1                              | P3SKIP_B3__SKIPPED | P3SKIP_B4__SKIPPED | P3SKIP_B5__SKIPPED
 566   1                              | P3SKIP_B6__NOT_SKIPPED | P3SKIP_B7__NOT_SKIPPED;
 567   1              // [P3SKIP - Port 3 Skip]$
 568   1      
 569   1      }
 570          
 571          extern void SPI_0_enter_DefaultMode_from_RESET(void) {
 572   1              // $[SPI0CKR - SPI0 Clock Rate]
 573   1              /***********************************************************************
 574   1               - SPI0 Clock Rate = 0x17
 575   1               ***********************************************************************/
 576   1              SPI0CKR = (0x17 << SPI0CKR_SPI0CKR__SHIFT);
 577   1              // [SPI0CKR - SPI0 Clock Rate]$
 578   1      
 579   1              // $[SPI0CFG - SPI0 Configuration]
 580   1              /***********************************************************************
 581   1               - Enable master mode. Operate as a master
 582   1               ***********************************************************************/
 583   1              SPI0CFG |= SPI0CFG_MSTEN__MASTER_ENABLED;
 584   1              // [SPI0CFG - SPI0 Configuration]$
 585   1      
 586   1              // $[SPI0CN0 - SPI0 Control]
 587   1              /***********************************************************************
 588   1               - Enable the SPI module
 589   1               - 3-Wire Slave or 3-Wire Master Mode
 590   1               ***********************************************************************/
 591   1              SPI0CN0 &= ~SPI0CN0_NSSMD__FMASK;
 592   1              SPI0CN0 |= SPI0CN0_SPIEN__ENABLED;
 593   1              // [SPI0CN0 - SPI0 Control]$
 594   1      
 595   1      }
 596          
 597          extern void SMBUS_0_enter_DefaultMode_from_RESET(void) {
 598   1              // $[SMB0ADR - SMBus 0 Slave Address]
 599   1              // [SMB0ADR - SMBus 0 Slave Address]$
 600   1      
 601   1              // $[SMB0ADM - SMBus 0 Slave Address Mask]
 602   1              // [SMB0ADM - SMBus 0 Slave Address Mask]$
 603   1      
 604   1              // $[SMB0CF - SMBus 0 Configuration]
 605   1              /***********************************************************************
 606   1               - Slave states are inhibited
 607   1               - Enable the SMBus module
 608   1               ***********************************************************************/
 609   1              SMB0CF |= SMB0CF_INH__SLAVE_DISABLED | SMB0CF_ENSMB__ENABLED;
 610   1              // [SMB0CF - SMBus 0 Configuration]$
 611   1      
 612   1      }
 613          
 614          extern void TIMER16_3_enter_DefaultMode_from_RESET(void) {
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/29/2017 16:10:05 PAGE 11  

 615   1              // $[Timer Initialization]
 616   1              // Save Timer Configuration
 617   1              uint8_t TMR3CN0_TR3_save;
 618   1              TMR3CN0_TR3_save = TMR3CN0 & TMR3CN0_TR3__BMASK;
 619   1              // Stop Timer
 620   1              TMR3CN0 &= ~(TMR3CN0_TR3__BMASK);
 621   1              // [Timer Initialization]$
 622   1      
 623   1              // $[TMR3CN0 - Timer 3 Control]
 624   1              // [TMR3CN0 - Timer 3 Control]$
 625   1      
 626   1              // $[TMR3H - Timer 3 High Byte]
 627   1              /***********************************************************************
 628   1               - Timer 3 High Byte = 0x38
 629   1               ***********************************************************************/
 630   1              TMR3H = (0x38 << TMR3H_TMR3H__SHIFT);
 631   1              // [TMR3H - Timer 3 High Byte]$
 632   1      
 633   1              // $[TMR3L - Timer 3 Low Byte]
 634   1              /***********************************************************************
 635   1               - Timer 3 Low Byte = 0x9E
 636   1               ***********************************************************************/
 637   1              TMR3L = (0x9E << TMR3L_TMR3L__SHIFT);
 638   1              // [TMR3L - Timer 3 Low Byte]$
 639   1      
 640   1              // $[TMR3RLH - Timer 3 Reload High Byte]
 641   1              /***********************************************************************
 642   1               - Timer 3 Reload High Byte = 0x9E
 643   1               ***********************************************************************/
 644   1              TMR3RLH = (0x9E << TMR3RLH_TMR3RLH__SHIFT);
 645   1              // [TMR3RLH - Timer 3 Reload High Byte]$
 646   1      
 647   1              // $[TMR3RLL - Timer 3 Reload Low Byte]
 648   1              /***********************************************************************
 649   1               - Timer 3 Reload Low Byte = 0x58
 650   1               ***********************************************************************/
 651   1              TMR3RLL = (0x58 << TMR3RLL_TMR3RLL__SHIFT);
 652   1              // [TMR3RLL - Timer 3 Reload Low Byte]$
 653   1      
 654   1              // $[TMR3CN0]
 655   1              /***********************************************************************
 656   1               - Start Timer 3 running
 657   1               ***********************************************************************/
 658   1              TMR3CN0 |= TMR3CN0_TR3__RUN;
 659   1              // [TMR3CN0]$
 660   1      
 661   1              // $[Timer Restoration]
 662   1              // Restore Timer Configuration
 663   1              TMR3CN0 |= TMR3CN0_TR3_save;
 664   1              // [Timer Restoration]$
 665   1      
 666   1      }
 667          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    229    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.53.0.0   INITDEVICE                                                        12/29/2017 16:10:05 PAGE 12  

   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
